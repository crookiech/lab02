name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions
      
jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -Dgtests_DIR=${{ runner.workspace }}/gtests -Dgtest_DIR=${{ runner.workspace }}/gtests/googletest
          cmake --build . --config Release
      - name: Test
        run: cmake --build . --config Release --target test
      - name: Package
        run: cmake --build . --config Release --target package
      - name: Create Release (Ubuntu)
        id: create_release_ubuntu
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (Ubuntu)
          draft: false
          prerelease: false
      - name: Upload Release Asset (Ubuntu)
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
          asset_path: ./lab02-0.0.${{ github.run_number }}-Linux.deb
          asset_name: lab02-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
          allowUpdates: true


# name: 'C++ CI'

# on:
#   push:
#     branches:
#       - main
#       - feature/github_actions

# jobs:
#   build_ubuntu:
#     runs-on: ubuntu-latest
#     permissions: write-all
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: true
#       - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
#       - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
#       - run: cmake --build .
#       - run: cmake --build . --target test
#       - run: cmake --build . --target package
#       - name: Create Release (Ubuntu)
#         id: create_release_ubuntu
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{ github.run_number }}
#           release_name: Release ${{ github.run_number }} (Ubuntu)
#           draft: false
#           prerelease: false
#       - name: Upload Release Asset (Ubuntu)
#         id: upload-release-asset-ubuntu
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
#           asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
#           asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
#           asset_content_type: application/vnd.debian.binary-package
#           allowUpdates: true
